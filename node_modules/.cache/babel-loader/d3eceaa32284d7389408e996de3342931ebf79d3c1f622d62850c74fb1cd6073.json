{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\DOR\\\\Portfolio\\\\src\\\\views\\\\Inicio.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { LANGUAGES } from \"../constants/langs.ts\";\nimport Inicio from \"./Inicio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n\n  // Al cargar la aplicación, leer el idioma almacenado en el almacenamiento local y establecerlo\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\");\n    if (savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n]); // Dependencia vacía para ejecutar solo una vez al cargar la aplicación\n\n  // Función para cambiar el idioma y almacenarlo en el almacenamiento local\n  const changeLanguage = language => {\n    i18n.changeLanguage(language);\n    localStorage.setItem(\"language\", language);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Inicio, {\n          changeLanguage: changeLanguage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"XIFq83ieJr2IDBjDrSkk+Qj6jto=\", false, function () {\n  return [useTranslation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","BrowserRouter","Router","Route","Switch","useTranslation","LANGUAGES","Inicio","jsxDEV","_jsxDEV","App","_s","i18n","savedLanguage","localStorage","getItem","changeLanguage","language","setItem","children","path","exact","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/DOR/Portfolio/src/views/Inicio.js"],"sourcesContent":["// App.js\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LANGUAGES } from \"../constants/langs.ts\";\r\nimport Inicio from \"./Inicio\";\r\n\r\nconst App = () => {\r\n    const { i18n } = useTranslation();\r\n\r\n    // Al cargar la aplicación, leer el idioma almacenado en el almacenamiento local y establecerlo\r\n    useEffect(() => {\r\n        const savedLanguage = localStorage.getItem(\"language\");\r\n        if (savedLanguage) {\r\n            i18n.changeLanguage(savedLanguage);\r\n        }\r\n    }, [i18n]); // Dependencia vacía para ejecutar solo una vez al cargar la aplicación\r\n\r\n    // Función para cambiar el idioma y almacenarlo en el almacenamiento local\r\n    const changeLanguage = (language) => {\r\n        i18n.changeLanguage(language);\r\n        localStorage.setItem(\"language\", language);\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <Inicio changeLanguage={changeLanguage} />\r\n                </Route>\r\n                {/* Otras rutas */}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,SAAS,QAAQ,uBAAuB;AACjD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAK,CAAC,GAAGP,cAAc,CAAC,CAAC;;EAEjC;EACAL,SAAS,CAAC,MAAM;IACZ,MAAMa,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIF,aAAa,EAAE;MACfD,IAAI,CAACI,cAAc,CAACH,aAAa,CAAC;IACtC;EACJ,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ;EACA,MAAMI,cAAc,GAAIC,QAAQ,IAAK;IACjCL,IAAI,CAACI,cAAc,CAACC,QAAQ,CAAC;IAC7BH,YAAY,CAACI,OAAO,CAAC,UAAU,EAAED,QAAQ,CAAC;EAC9C,CAAC;EAED,oBACIR,OAAA,CAACP,MAAM;IAAAiB,QAAA,eACHV,OAAA,CAACL,MAAM;MAAAe,QAAA,eACHV,OAAA,CAACN,KAAK;QAACiB,IAAI,EAAC,GAAG;QAACC,KAAK;QAAAF,QAAA,eACjBV,OAAA,CAACF,MAAM;UAACS,cAAc,EAAEA;QAAe;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB,CAAC;AAACd,EAAA,CA3BID,GAAG;EAAA,QACYL,cAAc;AAAA;AAAAqB,EAAA,GAD7BhB,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}