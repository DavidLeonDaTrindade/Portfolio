{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\DOR\\\\Portfolio\\\\src\\\\views\\\\Contacto.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { LANGUAGES } from \"../constants/langs.ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contacto = () => {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    selectOption: \"option1\" // Agregado para mantener el estado del select\n  });\n  const [isValid, setIsValid] = useState({\n    name: true,\n    email: true,\n    message: true\n  });\n  const inputNombreRef = useRef(null); // Ref para el input de nombre\n\n  useEffect(() => {\n    // Al cargar la página, establece el foco en el input de nombre\n    inputNombreRef.current.focus();\n\n    // Cargar idioma seleccionado del localStorage al cargar la página\n    const selectedLanguage = localStorage.getItem(\"selectedLanguage\");\n    if (selectedLanguage) {\n      i18n.changeLanguage(selectedLanguage);\n    }\n  }, [i18n]); // Dependencia i18n para reaccionar a los cambios de idioma\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    setIsValid({\n      ...isValid,\n      [name]: true // Al cambiar el valor del input, se restablece el estado de validación a verdadero\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message,\n      email,\n      selectOption\n    } = formData;\n    const correoDestino = \"example@example.com\";\n    const mensaje = `Hola ${name}. Se ha enviado satisfactoriamente el siguiente mensaje: ${message}. Nos pondremos en contacto contigo en el correo ${email} lo antes posible. Opción seleccionada: ${selectOption}`;\n    alert(mensaje);\n    setFormData({\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      selectOption: \"option1\" // Reiniciar el estado del select\n    });\n  };\n  const onChangeLang = event => {\n    const selectedLanguage = event.target.value;\n    i18n.changeLanguage(selectedLanguage);\n    // Guardar el idioma seleccionado en el localStorage\n    localStorage.setItem(\"selectedLanguage\", selectedLanguage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-200 py-8 px-4 sm:px-6 lg:px-8 max-w-3xl mx-auto rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: t(\"contacto\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          className: \"block text-gray-700\",\n          children: t(\"nombreContacto\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"nombre\",\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true,\n          \"aria-invalid\": !isValid.name ? \"true\" : \"false\" // Agrega aria-invalid según el estado de validación\n          ,\n          ref: inputNombreRef // Asigna la referencia al input de nombre\n          ,\n          className: `mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${!isValid.name ? \"border-red-500\" : \"\"}` // Cambia el color del borde si el valor es inválido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"languageSelect\",\n          className: \"block text-gray-700\",\n          children: t(\"selectLanguage\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"languageSelect\",\n          defaultValue: i18n.language,\n          onChange: onChangeLang,\n          className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\",\n          children: LANGUAGES.map(({\n            code,\n            label\n          }) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: code,\n            children: label\n          }, code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-indigo-500 text-white py-2 px-4 rounded hover:bg-indigo-600 focus:outline-none focus:bg-indigo-600\",\n        children: t(\"enviar\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Contacto, \"QfI54Yaqs/8EfekfSQiECpy7JFs=\", false, function () {\n  return [useTranslation];\n});\n_c = Contacto;\nexport default Contacto;\nvar _c;\n$RefreshReg$(_c, \"Contacto\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useTranslation","LANGUAGES","jsxDEV","_jsxDEV","Contacto","_s","i18n","t","formData","setFormData","name","email","message","selectOption","isValid","setIsValid","inputNombreRef","current","focus","selectedLanguage","localStorage","getItem","changeLanguage","handleChange","e","value","target","handleSubmit","preventDefault","correoDestino","mensaje","alert","onChangeLang","event","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","onChange","required","ref","defaultValue","language","map","code","label","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/DOR/Portfolio/src/views/Contacto.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { LANGUAGES } from \"../constants/langs.ts\";\r\n\r\nconst Contacto = () => {\r\n    const { i18n, t } = useTranslation();\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        message: \"\",\r\n        selectOption: \"option1\" // Agregado para mantener el estado del select\r\n    });\r\n    const [isValid, setIsValid] = useState({\r\n        name: true,\r\n        email: true,\r\n        message: true\r\n    });\r\n    \r\n    const inputNombreRef = useRef(null); // Ref para el input de nombre\r\n\r\n    useEffect(() => {\r\n        // Al cargar la página, establece el foco en el input de nombre\r\n        inputNombreRef.current.focus();\r\n        \r\n        // Cargar idioma seleccionado del localStorage al cargar la página\r\n        const selectedLanguage = localStorage.getItem(\"selectedLanguage\");\r\n        if (selectedLanguage) {\r\n            i18n.changeLanguage(selectedLanguage);\r\n        }\r\n    }, [i18n]); // Dependencia i18n para reaccionar a los cambios de idioma\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value\r\n        });\r\n        setIsValid({\r\n            ...isValid,\r\n            [name]: true // Al cambiar el valor del input, se restablece el estado de validación a verdadero\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, message, email, selectOption } = formData;\r\n        const correoDestino = \"example@example.com\";\r\n        const mensaje = `Hola ${name}. Se ha enviado satisfactoriamente el siguiente mensaje: ${message}. Nos pondremos en contacto contigo en el correo ${email} lo antes posible. Opción seleccionada: ${selectOption}`;\r\n        alert(mensaje);\r\n        setFormData({\r\n            name: \"\",\r\n            email: \"\",\r\n            message: \"\",\r\n            selectOption: \"option1\" // Reiniciar el estado del select\r\n        });\r\n    };\r\n\r\n    const onChangeLang = (event) => {\r\n        const selectedLanguage = event.target.value;\r\n        i18n.changeLanguage(selectedLanguage);\r\n        // Guardar el idioma seleccionado en el localStorage\r\n        localStorage.setItem(\"selectedLanguage\", selectedLanguage);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-gray-200 py-8 px-4 sm:px-6 lg:px-8 max-w-3xl mx-auto rounded-lg\">\r\n            <h1 className=\"text-2xl font-semibold mb-4\">{t(\"contacto\")}</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-4\">\r\n                    <label htmlFor=\"nombre\" className=\"block text-gray-700\">{t(\"nombreContacto\")}</label>\r\n                    <input\r\n                        id=\"nombre\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                        required\r\n                        aria-invalid={!isValid.name ? \"true\" : \"false\"} // Agrega aria-invalid según el estado de validación\r\n                        ref={inputNombreRef} // Asigna la referencia al input de nombre\r\n                        className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${!isValid.name ? \"border-red-500\" : \"\"}`} // Cambia el color del borde si el valor es inválido\r\n                    />\r\n                </div>\r\n                {/* Resto del formulario */}\r\n                <div className=\"mb-4\">\r\n                    <label htmlFor=\"languageSelect\" className=\"block text-gray-700\">{t(\"selectLanguage\")}</label>\r\n                    <select\r\n                        id=\"languageSelect\"\r\n                        defaultValue={i18n.language}\r\n                        onChange={onChangeLang}\r\n                        className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n                    >\r\n                        {LANGUAGES.map(({ code, label }) => (\r\n                            <option key={code} value={code}>\r\n                                {label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\" className=\"bg-indigo-500 text-white py-2 px-4 rounded hover:bg-indigo-600 focus:outline-none focus:bg-indigo-600\">{t(\"enviar\")}</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacto;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}